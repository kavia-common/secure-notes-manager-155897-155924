{"is_source_file": true, "format": "TypeScript", "description": "This file provides authentication services including user registration, login, logout, and session management. It interacts with local storage to persist user data and session state.", "external_files": ["./storage", "@/types"], "external_methods": ["getJSON", "setJSON", "remove"], "published": ["register", "login", "logout", "getCurrentUser"], "classes": [], "methods": [{"name": "export async function register(email: string, password: string, displayName: string): Promise<Us/ register", "description": "Registers a new user, storing user info and session in local storage, throws error if email already exists.", "scope": "", "scopeKind": ""}, {"name": "export async function login(email: string, password: string): Promise<User> { login", "description": "Verifies user credentials and sets session, throws error if invalid.", "scope": "", "scopeKind": ""}, {"name": "export async function logout(): Promise<void> { logout", "description": "Clears the current user session.", "scope": "", "scopeKind": ""}, {"name": "export async function getCurrentUser(): Promise<User | null> { getCurrentUser", "description": "Retrieves the current logged-in user based on session data.", "scope": "", "scopeKind": ""}, {"name": "function hashPassword(pw: string): string { hashPassword", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["getJSON", "setJSON", "remove", "crypto.randomUUID"], "search-terms": ["auth.service.ts", "local storage authentication", "session management", "register user", "login validation"], "state": 2, "file_id": 21, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "SESSION_KEY", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^const SESSION_KEY = 'session_user_id'$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "USERS_KEY", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^const USERS_KEY = 'users'$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "exists", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^  const exists = users.find(u => u.email.toLowerCase() === email.toLowerCase())$/", "language": "TypeScript", "kind": "constant", "scope": "register", "scopeKind": "function"}, {"_type": "tag", "name": "getCurrentUser", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^export async function getCurrentUser(): Promise<User | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "hashPassword", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^function hashPassword(pw: string): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^export async function login(email: string, password: string): Promise<User> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^export async function logout(): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^  const now = Date.now()$/", "language": "TypeScript", "kind": "constant", "scope": "register", "scopeKind": "function"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^export async function register(email: string, password: string, displayName: string): Promise<Us/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^  const user = users.find(u => u.email.toLowerCase() === email.toLowerCase())$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^  const user: User = {$/", "language": "TypeScript", "kind": "constant", "scope": "register", "scopeKind": "function"}, {"_type": "tag", "name": "userId", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^  const userId = getJSON<string | null>(SESSION_KEY, null)$/", "language": "TypeScript", "kind": "constant", "scope": "getCurrentUser", "scopeKind": "function"}, {"_type": "tag", "name": "users", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^  const users = getJSON<User[]>(USERS_KEY, [])$/", "language": "TypeScript", "kind": "constant", "scope": "getCurrentUser", "scopeKind": "function"}, {"_type": "tag", "name": "users", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^  const users = getJSON<User[]>(USERS_KEY, [])$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "users", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^  const users = getJSON<User[]>(USERS_KEY, [])$/", "language": "TypeScript", "kind": "constant", "scope": "register", "scopeKind": "function"}, {"_type": "tag", "name": "users", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/services/auth.service.ts", "pattern": "/^  users.push(user)$/", "language": "TypeScript", "kind": "constant", "scope": "register", "scopeKind": "function"}], "hash": "846a6258367302f1e5c0562925622f8c", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/auth.service.ts", "revision_history": [{"47": ""}]}