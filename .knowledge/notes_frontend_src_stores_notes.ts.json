{"is_source_file": true, "format": "TypeScript (Vue + Pinia store)", "description": "This file defines a Pinia store for managing notes in a Vue application. It includes state variables, computed properties, and methods for CRUD operations on notes, fetching categories, filtering, and selection handling.", "external_files": ["@/services/notes.service", "@/types", "./auth"], "external_methods": ["getNotes", "getCategories", "createNote", "updateNote", "deleteNote", "useAuthStore"], "published": ["useNotesStore"], "classes": [], "methods": [{"name": "async function load() { load", "description": "Loads notes and categories for the current user.", "scope": "", "scopeKind": ""}, {"name": "async function addNew(initial?: Partial<Pick<Note, 'title' | 'content' | 'category'>>) { addNew", "description": "Creates a new note for the current user and selects it.", "scope": "", "scopeKind": ""}, {"name": "async function save(id: string, updates: Partial<Omit<Note, 'id' | 'userId' | 'createdAt'>>) { save", "description": "Updates an existing note and refreshes store state.", "scope": "", "scopeKind": ""}, {"name": "async function remove(id: string) { remove", "description": "Deletes a note and updates the selection.", "scope": "", "scopeKind": ""}, {"name": "function setCategory(cat: string) { setCategory", "description": "Sets the active category filter.", "scope": "", "scopeKind": ""}, {"name": "function setSearch(q: string) { setSearch", "description": "Sets the text search filter for notes.", "scope": "", "scopeKind": ""}, {"name": "function selectNote(id: string) { selectNote", "description": "Selects a note by ID for editing/viewing.", "scope": "", "scopeKind": ""}], "calls": ["getNotes", "getCategories", "createNote", "updateNote", "deleteNote", "useAuthStore"], "search-terms": ["notes store", "Pinia", "Vue", "notes CRUD", "filter notes", "categories", "selected note"], "state": 2, "file_id": 24, "knowledge_revision": 56, "git_revision": "", "revision_history": [{"53": ""}, {"56": ""}], "ctags": [{"_type": "tag", "name": "addNew", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^  async function addNew(initial?: Partial<Pick<Note, 'title' | 'content' | 'category'>>) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "cats", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^      const cats = await getCategories(auth.user.id)$/", "language": "TypeScript", "kind": "constant", "scope": "load", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^    const idx = notes.value.findIndex(n => n.id === id)$/", "language": "TypeScript", "kind": "constant", "scope": "remove", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^    const idx = notes.value.findIndex(n => n.id === id)$/", "language": "TypeScript", "kind": "constant", "scope": "save", "scopeKind": "function"}, {"_type": "tag", "name": "load", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^  async function load() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^    const n = await createNote(auth.user.id, initial)$/", "language": "TypeScript", "kind": "constant", "scope": "addNew", "scopeKind": "function"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^  async function remove(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^  async function save(id: string, updates: Partial<Omit<Note, 'id' | 'userId' | 'createdAt'>>) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "selectNote", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^  function selectNote(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "setCategory", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^  function setCategory(cat: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "setSearch", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^  function setSearch(q: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "u", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^    const u = await updateNote(auth.user.id, id, updates)$/", "language": "TypeScript", "kind": "constant", "scope": "save", "scopeKind": "function"}, {"_type": "tag", "name": "useNotesStore", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^export const useNotesStore = defineStore('notes', () => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "wasSelected", "path": "/home/kavia/workspace/code-generation/secure-notes-manager-155897-155924/notes_frontend/src/stores/notes.ts", "pattern": "/^    const wasSelected = selectedNoteId.value === id$/", "language": "TypeScript", "kind": "constant", "scope": "remove", "scopeKind": "function"}], "hash": "6944db362a9ba973373659c11e749b00", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/stores/notes.ts"}